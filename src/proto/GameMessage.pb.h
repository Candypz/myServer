// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#ifndef PROTOBUF_GameMessage_2eproto__INCLUDED
#define PROTOBUF_GameMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CMessage;
class CMessageDefaultTypeInternal;
extern CMessageDefaultTypeInternal _CMessage_default_instance_;
class CRegistration_Req;
class CRegistration_ReqDefaultTypeInternal;
extern CRegistration_ReqDefaultTypeInternal _CRegistration_Req_default_instance_;
class CRegistration_Res;
class CRegistration_ResDefaultTypeInternal;
extern CRegistration_ResDefaultTypeInternal _CRegistration_Res_default_instance_;

namespace protobuf_GameMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GameMessage_2eproto

// ===================================================================

class CMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMessage) */ {
 public:
  CMessage();
  virtual ~CMessage();

  CMessage(const CMessage& from);

  inline CMessage& operator=(const CMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessage& default_instance();

  static inline const CMessage* internal_default_instance() {
    return reinterpret_cast<const CMessage*>(
               &_CMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMessage* other);

  // implements Message ----------------------------------------------

  inline CMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessage& from);
  void MergeFrom(const CMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // int32 cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // int32 sn = 3;
  void clear_sn();
  static const int kSnFieldNumber = 3;
  ::google::protobuf::int32 sn() const;
  void set_sn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 sn_;
  mutable int _cached_size_;
  friend struct protobuf_GameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CRegistration_Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CRegistration_Req) */ {
 public:
  CRegistration_Req();
  virtual ~CRegistration_Req();

  CRegistration_Req(const CRegistration_Req& from);

  inline CRegistration_Req& operator=(const CRegistration_Req& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRegistration_Req& default_instance();

  static inline const CRegistration_Req* internal_default_instance() {
    return reinterpret_cast<const CRegistration_Req*>(
               &_CRegistration_Req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CRegistration_Req* other);

  // implements Message ----------------------------------------------

  inline CRegistration_Req* New() const PROTOBUF_FINAL { return New(NULL); }

  CRegistration_Req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CRegistration_Req& from);
  void MergeFrom(const CRegistration_Req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CRegistration_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // int32 account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::int32 account() const;
  void set_account(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CRegistration_Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 account_;
  mutable int _cached_size_;
  friend struct protobuf_GameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CRegistration_Res : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CRegistration_Res) */ {
 public:
  CRegistration_Res();
  virtual ~CRegistration_Res();

  CRegistration_Res(const CRegistration_Res& from);

  inline CRegistration_Res& operator=(const CRegistration_Res& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRegistration_Res& default_instance();

  static inline const CRegistration_Res* internal_default_instance() {
    return reinterpret_cast<const CRegistration_Res*>(
               &_CRegistration_Res_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CRegistration_Res* other);

  // implements Message ----------------------------------------------

  inline CRegistration_Res* New() const PROTOBUF_FINAL { return New(NULL); }

  CRegistration_Res* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CRegistration_Res& from);
  void MergeFrom(const CRegistration_Res& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CRegistration_Res* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 server_tiem = 2;
  void clear_server_tiem();
  static const int kServerTiemFieldNumber = 2;
  ::google::protobuf::int64 server_tiem() const;
  void set_server_tiem(::google::protobuf::int64 value);

  // int32 error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CRegistration_Res)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 server_tiem_;
  ::google::protobuf::int32 error_code_;
  mutable int _cached_size_;
  friend struct protobuf_GameMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessage

// bytes content = 1;
inline void CMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessage::content() const {
  // @@protoc_insertion_point(field_get:CMessage.content)
  return content_.GetNoArena();
}
inline void CMessage::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMessage.content)
}
#if LANG_CXX11
inline void CMessage::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMessage.content)
}
#endif
inline void CMessage::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMessage.content)
}
inline void CMessage::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMessage.content)
}
inline ::std::string* CMessage::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:CMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessage::release_content() {
  // @@protoc_insertion_point(field_release:CMessage.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:CMessage.content)
}

// int32 cmd = 2;
inline void CMessage::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 CMessage::cmd() const {
  // @@protoc_insertion_point(field_get:CMessage.cmd)
  return cmd_;
}
inline void CMessage::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:CMessage.cmd)
}

// int32 sn = 3;
inline void CMessage::clear_sn() {
  sn_ = 0;
}
inline ::google::protobuf::int32 CMessage::sn() const {
  // @@protoc_insertion_point(field_get:CMessage.sn)
  return sn_;
}
inline void CMessage::set_sn(::google::protobuf::int32 value) {
  
  sn_ = value;
  // @@protoc_insertion_point(field_set:CMessage.sn)
}

// -------------------------------------------------------------------

// CRegistration_Req

// int32 account = 1;
inline void CRegistration_Req::clear_account() {
  account_ = 0;
}
inline ::google::protobuf::int32 CRegistration_Req::account() const {
  // @@protoc_insertion_point(field_get:CRegistration_Req.account)
  return account_;
}
inline void CRegistration_Req::set_account(::google::protobuf::int32 value) {
  
  account_ = value;
  // @@protoc_insertion_point(field_set:CRegistration_Req.account)
}

// bytes password = 2;
inline void CRegistration_Req::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CRegistration_Req::password() const {
  // @@protoc_insertion_point(field_get:CRegistration_Req.password)
  return password_.GetNoArena();
}
inline void CRegistration_Req::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CRegistration_Req.password)
}
#if LANG_CXX11
inline void CRegistration_Req::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CRegistration_Req.password)
}
#endif
inline void CRegistration_Req::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CRegistration_Req.password)
}
inline void CRegistration_Req::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CRegistration_Req.password)
}
inline ::std::string* CRegistration_Req::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CRegistration_Req.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CRegistration_Req::release_password() {
  // @@protoc_insertion_point(field_release:CRegistration_Req.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CRegistration_Req::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CRegistration_Req.password)
}

// -------------------------------------------------------------------

// CRegistration_Res

// int32 error_code = 1;
inline void CRegistration_Res::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 CRegistration_Res::error_code() const {
  // @@protoc_insertion_point(field_get:CRegistration_Res.error_code)
  return error_code_;
}
inline void CRegistration_Res::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:CRegistration_Res.error_code)
}

// int64 server_tiem = 2;
inline void CRegistration_Res::clear_server_tiem() {
  server_tiem_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CRegistration_Res::server_tiem() const {
  // @@protoc_insertion_point(field_get:CRegistration_Res.server_tiem)
  return server_tiem_;
}
inline void CRegistration_Res::set_server_tiem(::google::protobuf::int64 value) {
  
  server_tiem_ = value;
  // @@protoc_insertion_point(field_set:CRegistration_Res.server_tiem)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameMessage_2eproto__INCLUDED
